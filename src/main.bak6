
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define BUFFSIZE 1024
#define  SLEN 81

void append(FILE *source, FILE *dest);

int main(void) {
    FILE *fa, *fs;
    int files = 0;
    char file_app[SLEN];
    char file_src[SLEN];
    puts("enter name of destination file");
    gets(file_app);
    if ((fa = fopen(file_app, "a")) == NULL) {
        fprintf(stderr, "can't open %s\n.", file_app);
        exit(2);
    }
    if (setvbuf(fa, NULL, _IOFBF, BUFFSIZE) != 0) {
        fputs("cant't create output buffer\n", stderr);
        exit(3);
    }
    puts("enter name of first source file");
    while (gets(file_src) && file_src[0] != '\0') {
        if (strcmp(file_src, file_app) == 0) {
            fputs("cant't append file to iteself\n", stderr);

        } else if ((fs = fopen(file_src, "r")) == NULL) {
            fprintf(stderr, "cant't open %s\n", file_src);
        } else {
            if (setvbuf(fs, NULL, _IOFBF, BUFFSIZE) != 0) {
                fputs("can't create input buffer\n", stderr);
                continue;
            }
            append(fs, fa);
            if (ferror(fs) != 0) {
                fprintf(stderr, "error in writing file %s.\n", file_app);
            }
            fclose(fs);
            files++;
            printf("file %s appended.\n", file_src);
            puts("next file (empty line to quit).");
        }
    }
    printf("done.%d file append.", files);
    fclose(fa);

    return EXIT_SUCCESS;

}

void append(FILE *source, FILE *dest) {
    size_t bytes;

    static char temp[BUFFSIZE];
    while ((bytes = fread(temp, sizeof(char), BUFFSIZE, source)) > 0) {
        fwrite(temp, sizeof(char), bytes, dest);
    }
}